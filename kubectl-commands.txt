KUBECTL
kubectl version --client
kubectl cluster-info
kubectl run [nome-pod] --image [nome-imagem] > ex: kubectl run nginx --image --nginx. Cria pod E replicaset, mas sem arquivo de configuração

CONSULTA
kubectl get [recurso]
		pods
		pods -o wide
		replicaset
		deployment
		all
kubectl describe [recurso] [nome do recurso]

CRIAÇÃO E EXCLUSÃO
kubectl create -f [nome do arquivo] (--save-config > serve para gravar as configurações para um futuro apply)
	apply -f [nome do arquivo]
kubectl delete [recurso] [nome do recurso]
kubectl replace -f [nome do arquivo] > atualiza as modificações do arquivo
kubectl scale --replicas=x -f [nome do arquivo]

### DEPLOYMENT ###
kubectl create -f [nome do arquivo] --save-config
	> --save-config - registra a cofiguração do arquivo de deployment, pode ser atualizado
	> --record - será inutilizado, recomendado substituir por deprecated
kubectl set image deployment [name deployment] [nome do container]=[imagem]
kubectl apply -f [nome do arquivo]
	> atualiza versão
kubectl scale deployment [name deployment] --replicas=[número replicas]

kubectl annotate deployment  [name deployment]  description='[descrição]'
						kubernetes.io/change-cause="[descrição]"

kubectl rollout status deployment [name deployment]
		history deployment [name deployment] > exibe as revisões do deployment
kubectl rollout undo deployment [name deployment]
		undo deployment [name deployment] --to-revision=[número revisão]

kubectl exec -it [nome do pod] -- bash > acessa o bash do container

---------------------------------------------------------------------------------------------

MINIKUBE
minikube delete > exclui cluster
minikube start > cria cluster
minikube config set driver [docker/etc] > serve pra marcar como padrão o container runtime utilizado
minikube service [nome service] --url > URL da service